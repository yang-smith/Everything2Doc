"""update project table with user_id

Revision ID: e942c33dfdd7
Revises: 
Create Date: 2025-03-12 12:13:16.842475

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel
# revision identifiers, used by Alembic.
revision: str = 'e942c33dfdd7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('input_documents', 'id',
               existing_type=sa.UUID(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('input_documents', 'project_id',
               existing_type=sa.UUID(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('input_documents', 'filename',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('input_documents', 'file_path',
               existing_type=sa.VARCHAR(length=500),
               nullable=False)
    op.alter_column('input_documents', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('input_documents', 'overview',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('input_documents', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('input_documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('output_documents', 'id',
               existing_type=sa.UUID(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('output_documents', 'project_id',
               existing_type=sa.UUID(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('output_documents', 'title',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('output_documents', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('output_documents', 'progress',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('output_documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('output_documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('projects', sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('projects', 'id',
               existing_type=sa.UUID(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('projects', 'name',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('projects', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_foreign_key(None, 'projects', 'users', ['user_id'], ['id'])
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('projects', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('projects', 'name',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('projects', 'id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('projects', 'user_id')
    op.alter_column('output_documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('output_documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('output_documents', 'progress',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('output_documents', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('output_documents', 'title',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('output_documents', 'project_id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('output_documents', 'id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('input_documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('input_documents', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('input_documents', 'overview',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('input_documents', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('input_documents', 'file_path',
               existing_type=sa.VARCHAR(length=500),
               nullable=True)
    op.alter_column('input_documents', 'filename',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('input_documents', 'project_id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('input_documents', 'id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.UUID(),
               existing_nullable=False)
    # ### end Alembic commands ###
